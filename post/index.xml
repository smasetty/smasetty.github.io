<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sharat Masetty</title>
    <link>https://smasetty.github.io/post/</link>
    <description>Recent content in Posts on Sharat Masetty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>sharat_masetty@yahoo.com (Sharat Masetty)</managingEditor>
    <webMaster>sharat_masetty@yahoo.com (Sharat Masetty)</webMaster>
    <lastBuildDate>Tue, 10 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://smasetty.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ref Counted Objects and C&#43;&#43; Smart Pointers</title>
      <link>https://smasetty.github.io/2019/12/ref-counted-objects-and-c-smart-pointers/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      <author>sharat_masetty@yahoo.com (Sharat Masetty)</author>
      <guid>https://smasetty.github.io/2019/12/ref-counted-objects-and-c-smart-pointers/</guid>
      <description>&lt;p&gt;In this article we will look into implementing a simple smart pointer class
with reference counting support for tracking the lifetime of a pointer. First
we will try to understand the primary models of memory management in most modern
programming languages.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>